<?xml version="1.0" encoding="UTF-8"?>
 <beans xmlns="http://www.springframework.org/schema/beans"  
	    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	    xmlns:p="http://www.springframework.org/schema/p"  
	    xmlns:context="http://www.springframework.org/schema/context"  
	    xmlns:mvc="http://www.springframework.org/schema/mvc"  
	    xmlns:tx="http://www.springframework.org/schema/tx" 
	    xmlns:task="http://www.springframework.org/schema/task"
		xmlns:aop="http://www.springframework.org/schema/aop"
	    xsi:schemaLocation=
	    					"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd   
	                        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd 
	                        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd   
	                     	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
	                     	http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd
	                        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd"
	                        default-lazy-init="false">
	                        
	<context:annotation-config /> 

	<context:property-placeholder location="classpath:jdbc.properties" ignore-unresolvable="true" />
	
	<context:component-scan base-package="com.vico.license" />          
	
	<task:executor id="executor" pool-size="5" /> 
	<task:scheduler id="scheduler" pool-size="10" /> 
	<task:annotation-driven executor="executor" scheduler="scheduler" />         
	
    <bean name="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init"  
        destroy-method="close">  
    	
    	<property name="driverClassName" value="${driver}"/>
        <property name="url" value="${url}" />  
        <property name="username" value="${jdbc.username}" />  
        <property name="password" value="${jdbc.password}" />  
        
        <property name="initialSize" value="0"></property>  
        <property name="maxActive" value="20"></property>  
        <property name="maxIdle" value="20"></property>  
        <property name="minIdle" value="0"></property>  
        <property name="maxWait" value="60000"></property>  
        
        <property name="validationQuery" value="${validationQuery}" />
		<property name="testOnBorrow" value="false" />
		<property name="testOnReturn" value="false" />
		<property name="testWhileIdle" value="true" />
		<property name="timeBetweenEvictionRunsMillis" value="60000" />
		<property name="minEvictableIdleTimeMillis" value="25200000" />
		<property name="removeAbandoned" value="true" />
		<property name="removeAbandonedTimeout" value="1800" />
		<property name="logAbandoned" value="true" />
		<property name="filters" value="mergeStat" />
    </bean>  
  	
    <!-- spring和MyBatis完美整合，不需要mybatis的配置映射文件 -->  
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">  
        <property name="dataSource" ref="dataSource" />  
        <!-- 自动扫描mapping.xml文件 -->  
        <property name="mapperLocations" value="classpath:com/vico/license/mapper/*.xml"></property>  
    </bean>  
 
    <!-- DAO接口所在包名，Spring会自动查找其下的类 -->  
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">  
        <property name="basePackage" value="com.vico.license.dao" />  
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>  
    </bean> 
    
    
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		  <property name="dataSource" ref="dataSource"/>
		  <property name="mapperLocations">
		    <array>
		      <value>classpath:mapper/*.xml</value>
		    </array>
		  </property>
		  <property name="typeAliasesPackage" value="com.isea533.ssm.model"/>
		  <property name="plugins">
		    <array>
		      <bean class="com.github.pagehelper.PageHelper">
		        <property name="properties">
		          <value>
		            dialect=hsqldb
		          </value>
		        </property>
		      </bean>
		    </array>
		  </property>
		</bean>
	
	
	
	<plugins>
		    <!-- com.github.pagehelper为PageHelper类所在包名 -->
		    <plugin interceptor="com.github.pagehelper.PageHelper">
		        <!-- 4.0.0以后版本可以不设置该参数 -->
		        <property name="dialect" value="mysql"/>
		        <!-- 该参数默认为false -->
		        <!-- 设置为true时，会将RowBounds第一个参数offset当成pageNum页码使用 -->
		        <!-- 和startPage中的pageNum效果一样-->
		        <property name="offsetAsPageNum" value="true"/>
		        <!-- 该参数默认为false -->
		        <!-- 设置为true时，使用RowBounds分页会进行count查询 -->
		        <property name="rowBoundsWithCount" value="true"/>
		        <!-- 设置为true时，如果pageSize=0或者RowBounds.limit = 0就会查询出全部的结果 -->
		        <!-- （相当于没有执行分页查询，但是返回结果仍然是Page类型）-->
		        <property name="pageSizeZero" value="true"/>
		        <!-- 3.3.0版本可用 - 分页参数合理化，默认false禁用 -->
		        <!-- 启用合理化时，如果pageNum<1会查询第一页，如果pageNum>pages会查询最后一页 -->
		        <!-- 禁用合理化时，如果pageNum<1或pageNum>pages会返回空数据 -->
		        <property name="reasonable" value="false"/>
		        <!-- 3.5.0版本可用 - 为了支持startPage(Object params)方法 -->
		        <!-- 增加了一个`params`参数来配置参数映射，用于从Map或ServletRequest中取值 -->
		        <!-- 可以配置pageNum,pageSize,count,pageSizeZero,reasonable,orderBy,不配置映射的用默认值 -->
		        <!-- 不理解该含义的前提下，不要随便复制该配置 -->
		        <property name="params" value="pageNum=pageHelperStart;pageSize=pageHelperRows;"/>
		        <!-- 支持通过Mapper接口参数来传递分页参数 -->
		        <property name="supportMethodsArguments" value="false"/>
		        <!-- always总是返回PageInfo类型,check检查返回类型是否为PageInfo,none返回Page -->
		        <property name="returnPageInfo" value="none"/>
		    </plugin>
		</plugins>
	
     </beans>  